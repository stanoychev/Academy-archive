@model GraphViewModel


<!-- Styles -->
<style>
    #chartdiv {
        width: 100%;
        height: 500px;
    }
</style>
<link rel="stylesheet" href="https://www.amcharts.com/lib/3/plugins/export/export.css" type="text/css" media="all" />

<div class="right_col" role="main">
    <div class="clearfix"></div>
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2>
                        <i class="fa fa-microchip"></i> <b>@Model.DisplayData.SensorName</b>
                    </h2>
                    <ul class="nav navbar-right panel_toolbox">
                        <li>
                            <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                        </li>
                    </ul>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <div id="chartdiv"></div>
                </div>
            </div>
        </div>
        <div class="col-md-6 col-xs-12" style="word-wrap: break-word;">
            <div role="main">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>
                            <b>@Model.DisplayData.SensorName</b>
                        </h2>
                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                            </li>
                            <li>
                                <a class="close-link"><i class="fa fa-close"></i></a>
                            </li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <ul style="list-style-type: none">
                            <li>
                                <h5><b class="green">Tag:</b> <b>@Model.DisplayData.SensorTag</b></h5>
                            </li>
                            <li>
                                <h5><b class="green">URL:</b> <b>http://telerikacademy.icb.bg/sensor/@Model.DisplayData.SensorIdICB</b></h5>
                            </li>
                            <li>
                                <h5><b class="green">Measurement Type:</b> <b>@Model.DisplayData.MeasurementType</b></h5>
                            </li>
                            <li>
                                <h5><b class="green">Polling Interval:</b> <b>@Model.DisplayData.PollingInterval seconds</b></h5>
                            </li>
                            @if (Model.DisplayData.MeasurementType == "(true/false)")
                            {
                                <li>
                                    <h5><b class="green">Min:</b> <b>False</b></h5>
                                </li>
                                <li>
                                    <h5><b class="green">Max:</b> <b>True</b></h5>
                                </li>
                            }
                            else
                            {
                                <li>
                                    <h5><b class="green">Min:</b> <b>@Model.DisplayData.MinValue</b></h5>
                                </li>
                                <li>
                                    <h5><b class="green">Max:</b> <b>@Model.DisplayData.MaxValue</b></h5>
                                </li>
                            }
                            <li>
                                <h5><b class="green">Public:</b> <b>@(Model.DisplayData.IsPublic ? "Yes" : "No")</b></h5>
                            </li>
                            <li>
                                <h5><b class="green">Added On:</b> <b>@Model.DisplayData.AddedOn</b></h5>
                            </li>
                            <li>
                                <h5><b class="green">Description:</b> <b>@Model.DisplayData.DescriptionGivenByTheUser</b></h5>
                            <li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <!-- Resources -->
    <script src="https://www.amcharts.com/lib/3/amcharts.js"></script>
    <script src="https://www.amcharts.com/lib/3/serial.js"></script>
    <script src="https://www.amcharts.com/lib/3/plugins/export/export.min.js"></script>
    <script src="https://www.amcharts.com/lib/3/themes/light.js"></script>

    <!-- Chart code -->
    <script>
        var chart = AmCharts.makeChart("chartdiv",
            {
                "type": "serial",
                "theme": "light",
                "marginTop": 0,
                "marginRight": 80,
                "dataProvider": [
                    @Html.Raw(string.Join(", ", Model.JsonList))
                ],
                "valueAxes": [
                    {
                        "axisAlpha": 0,
                        "position": "left"
                    }
                ],
                "graphs": [
                    {
                        "id": "g1",
                        "balloonText": "[[category]]<br><b><span style='font-size:14px;'>[[value]]</span></b>",
                        "bullet": "round",
                        "bulletSize": 8,
                        "lineColor": "#2a3f54",
                        "lineThickness": 2,
                        "negativeBase": @Html.Raw(Model.DisplayData.MaxValue),
                        "negativeLineColor": "#26b99a",
                        "type": "smoothedLine",
                        "valueField": "value"
                    }
                ],
                "chartScrollbar": {
                    "graph": "g1",
                    "gridAlpha": 0,
                    "color": "#888888",
                    "scrollbarHeight": 55,
                    "backgroundAlpha": 0,
                    "selectedBackgroundAlpha": 0.1,
                    "selectedBackgroundColor": "#888888",
                    "graphFillAlpha": 0,
                    "autoGridCount": true,
                    "selectedGraphFillAlpha": 0,
                    "graphLineAlpha": 0.2,
                    "graphLineColor": "#c2c2c2",
                    "selectedGraphLineColor": "#888888",
                    "selectedGraphLineAlpha": 1
                },
                "chartCursor": {
                    "categoryBalloonDateFormat": "YYYY-MM-DD HH:NN:SS",
                    "cursorAlpha": 0,
                    "valueLineEnabled": true,
                    "valueLineBalloonEnabled": true,
                    "valueLineAlpha": 0.5,
                    "fullWidth": true
                },
                "dataDateFormat": "YYYY-MM-DD HH:NN:SS",
                "categoryField": "year",
                "categoryAxis": {
                    "minPeriod": "ss",
                    "parseDates": true,
                    "minorGridAlpha": 0.1,
                    "minorGridEnabled": true
                },
                "export": {
                    "enabled": true
                }
            });

        chart.addListener("rendered", zoomChart);
        if (chart.zoomChart) {
            chart.zoomChart();
        }

        function zoomChart() {
            chart.zoomToIndexes(Math.round(chart.dataProvider.length * 0.4),
                Math.round(chart.dataProvider.length * 0.55));
        }
    </script>
}				